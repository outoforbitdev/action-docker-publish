name: "action-docker-publish"
description: "Automatically release a new version on GitHub"
inputs:
  docker-username:
    description: "The username for the docker account used to publish"
    required: true
  docker-token:
    description: "The token for the docker account used to publish"
    required: true
  image-name:
    description: "The name (repository) of the image being published"
    required: true
  image-tag:
    description: "The tag of the image being published"
    required: true
  dry-run:
    description: "Flag for whether to actually publish the image"
    required: false
    default: "false"
  publish-latest:
    description: "Flag for whether to publish the image with the 'latest' flag"
    required: false
    default: "false"
  dockerfile-path:
    description: "Path to the directory with the Dockerfile"
    required: false
    default: "."
  build-args:
    description: "List of build args in the form 'ARG_ONE=value,ARG_TWO=value"
    required: false
    default: ""
  platforms:
    description: "Comma-delimited list of target platforms"
    required: false
    default: "linux/amd64,linux/arm64/v8,linux/arm/v7"
outputs:
  tag:
    description: "The tag that was published"
  sha-tag:
    description: "The sha-specific tag that was published"
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-token }}
    - name: Set short tag
      run: echo "SHORT_TAG=${{inputs.image-name}}:${{inputs.image-tag}}" >> "$GITHUB_ENV"
      shell: bash
    - name: Set sha tag
      run: echo "SHA_TAG=${SHORT_TAG}--$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
      shell: bash
    - name: Set latest tag
      run: echo "LATEST_TAG=${{inputs.image-name}}:latest" >> "$GITHUB_ENV"
      shell: bash
    - name: Set tag string
      if: ${{ inputs.publish-latest == 'true' }}
      run: echo "TAG_LIST=$SHORT_TAG,$SHA_TAG,$LATEST_TAG" >> "$GITHUB_ENV"
      shell: bash
    - name: Set tag string
      if: ${{ inputs.publish-latest == 'false' }}
      run: echo "TAG_LIST=$SHORT_TAG,$SHA_TAG"
      shell: bash
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        build-args: ${{ inputs.build-args }}
        context: ${{ inputs.dockerfile-path }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.dry-run == 'false' }}
        tags: ${{ env.TAG_LIST }}
