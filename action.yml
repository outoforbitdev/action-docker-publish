name: "action-semantic-release"
description: "Automatically release a new version on GitHub"
inputs:
  docker-username:
    description: "The username for the docker account used to publish"
    required: true
  docker-token:
    description: "The token for the docker account used to publish"
    required: true
  image-name:
    description: "The name (repository) of the image being published"
    required: true
  image-tag:
    description: "The tag of the image being published"
    required: true
  dry-run:
    description: "Flag for whether to actually publish the image"
    required: false
    default: "false"
  publish-latest:
    description: "Flag for whether to publish the image with the 'latest' flag"
    required: false
    default: "false"
  build-command:
    description: "Full command to build the image"
    required: false
    default: "docker build"
  dockerfile-location:
    description: "Path to the directory with the Dockerfile"
    required: false
    default: "."
outputs:
  tag:
    description: "The tag that was published"
  sha-tag:
    description: "The sha-specific tag that was published"
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Docker login
      run: docker login -u ${{inputs.docker-username}} -p ${{inputs.docker-token}}
      shell: bash
    - name: Set short tag
      run: echo "SHORT_TAG=${{inputs.image-name}}:${{inputs.image-tag}}" >> "$GITHUB_ENV"
      shell: bash
    - name: Set sha tag
      run: echo "SHA_TAG=${SHORT_TAG}--$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
      shell: bash
    - name: Set latest tag
      run: echo "LATEST_TAG=${{inputs.image-name}}:latest" >> "$GITHUB_ENV"
      shell: bash
    - name: Build short tag
      run: ${{ inputs.build-command }} -t $SHORT_TAG ${{ inputs.dockerfile-path }}
      shell: bash
    - name: Push short tag
      if: ${{ inputs.dry-run == 'false' }}
      run: docker image push $SHORT_TAG
      shell: bash
    - name: Build sha tag
      run: ${{ inputs.build-command }} -t $SHA_TAG ${{ inputs.dockerfile-path }}
      shell: bash
    - name: Push sha tag
      if: ${{ inputs.dry-run == 'false' }}
      run: docker image push $SHA_TAG
      shell: bash
    - name: Build latest tag
      if: ${{ inputs.publish-latest == 'true' }}
      run: ${{ inputs.build-command }} -t $LATEST_TAG ${{ inputs.dockerfile-path }}
      shell: bash
    - name: Push latest tag
      if: ${{ inputs.dry-run == 'false' && inputs.publish-latest == 'true' }}
      run: docker image push $LATEST_TAG
      shell: bash
